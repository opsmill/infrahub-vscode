{
  "name": "infrahub",
  "displayName": "Infrahub",
  "description": "Infrahub development tools.",
  "version": "1.0.3",
  "publisher": "opsmill",
  "homepage": "https://github.com/opsmill/infrahub-vscode/blob/main/README.md",
  "icon": "media/infrahub-logo.png",
  "galleryBanner": {
    "color": "#2183F7",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/opsmill/infrahub-vscode"
  },
  "bugs": {
    "url": "https://github.com/opsmill/infrahub-vscode/issues"
  },
  "engines": {
    "vscode": "^1.99.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "workspaceContains:.infrahub.yml",
    "workspaceContains:.infrahub.yaml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "snippets": [
      {
        "language": "python",
        "path": "./snippets/python.json"
      },
      {
        "language": "yaml",
        "path": "./snippets/yaml.json"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Infrahub",
      "properties": {
        "infrahub-vscode.schemaDirectory": {
          "type": "string",
          "default": "schemas",
          "description": "Path to the directory containing schema files for Infrahub."
        },
        "infrahub-vscode.servers": {
          "type": "array",
          "description": "List of Infrahub servers to connect to.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the server. Must be unique."
              },
              "address": {
                "type": "string",
                "description": "Server address (URL or hostname)."
              },
              "api_token": {
                "type": "string",
                "description": "API token for authentication."
              }
            },
            "required": [
              "name",
              "address"
            ]
          },
          "default": []
        }
      }
    },
    "yamlValidation": [
      {
        "fileMatch": [
          "models/**/*.yml",
          "models/**/*.yaml",
          "schemas/**/*.yml",
          "schemas/**/*.yaml"
        ],
        "url": "https://schema.infrahub.app/infrahub/schema/latest.json"
      }
    ],
    "commands": [
      {
        "command": "infrahub.editInfrahubYaml",
        "title": "Edit file",
        "icon": "$(pencil)",
        "category": "Infrahub"
      },
      {
        "command": "infrahub.editGqlQuery",
        "title": "Edit GraphQL Query",
        "icon": "$(output)",
        "category": "Infrahub"
      },
      {
        "command": "infrahub.executeGraphQLQuery",
        "title": "Execute GraphQL Query",
        "icon": "$(play)",
        "category": "Infrahub"
      },
      {
        "command": "infrahub.newBranch",
        "title": "New Branch",
        "icon": "$(add)",
        "category": "Infrahub"
      },
      {
        "command": "infrahub.deleteBranch",
        "title": "Delete Branch",
        "icon": "$(trash)",
        "category": "Infrahub"
      },
      {
        "command": "infrahub.checkSchemaFile",
        "title": "Check Schema File",
        "icon": "$(checklist)",
        "category": "Infrahub"
      },
      {
        "command": "infrahub.loadSchemaFile",
        "title": "Load Schema File",
        "icon": "$(cloud-upload)",
        "category": "Infrahub"
      },
      {
        "command": "infrahub.checkAllSchemaFiles",
        "title": "Check All Schema Files",
        "icon": "$(checklist)",
        "category": "Infrahub"
      },
      {
        "command": "infrahub.loadAllSchemaFiles",
        "title": "Load All Schema Files",
        "icon": "$(cloud-upload)",
        "category": "Infrahub"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "infrahubContainer",
          "title": "Infrahub",
          "icon": "media/OTTO-dark.svg"
        }
      ]
    },
    "views": {
      "infrahubContainer": [
        {
          "id": "infrahubServerTreeView",
          "name": "Infrahub Servers",
          "icon": "media/OTTO-dark.svg"
        },
        {
          "id": "infrahubSchemaTreeView",
          "name": "Infrahub Schema",
          "icon": "media/OTTO-dark.svg"
        },
        {
          "id": "infrahubYamlTreeView",
          "name": "Infrahub YAML",
          "icon": "media/OTTO-dark.svg"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "infrahub.checkAllSchemaFiles",
          "when": "view == infrahubSchemaTreeView",
          "group": "navigation"
        },
        {
          "command": "infrahub.loadAllSchemaFiles",
          "when": "view == infrahubSchemaTreeView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "infrahub.newBranch",
          "when": "view == infrahubServerTreeView && viewItem == infrahubServer",
          "group": "inline"
        },
        {
          "command": "infrahub.newBranch",
          "when": "view == infrahubServerTreeView && viewItem == infrahubServer",
          "group": "context"
        },
        {
          "command": "infrahub.deleteBranch",
          "when": "view == infrahubServerTreeView && viewItem =~ /^infrahubBranch/",
          "group": "inline"
        },
        {
          "command": "infrahub.deleteBranch",
          "when": "view == infrahubServerTreeView && viewItem =~ /^infrahubBranch/",
          "group": "context"
        },
        {
          "command": "infrahub.editInfrahubYaml",
          "when": "view == infrahubYamlTreeView",
          "group": "inline"
        },
        {
          "command": "infrahub.executeGraphQLQuery",
          "when": "view == infrahubYamlTreeView && viewItem =~ /queries/",
          "group": "inline"
        },
        {
          "command": "infrahub.editGqlQuery",
          "when": "view == infrahubYamlTreeView && viewItem =~ /queries/",
          "group": "inline"
        },
        {
          "command": "infrahub.loadSchemaFile",
          "when": "view == infrahubSchemaTreeView",
          "group": "inline"
        },
        {
          "command": "infrahub.checkSchemaFile",
          "when": "view == infrahubSchemaTreeView",
          "group": "inline"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == yaml",
          "command": "infrahub.checkSchemaFile",
          "group": "navigation"
        },
        {
          "when": "resourceLangId == yaml",
          "command": "infrahub.loadSchemaFile",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "infrahub.editInfrahubYaml",
          "when": "view == infrahubSchemaTreeView",
          "group": "inline"
        }
      ]
    },
    "extensionDependencies": [
      "redhat.vscode-yaml"
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc --watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "deploy": "vsce publish --yarn"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.99.0",
    "@types/yaml": "^1.9.6",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@vscode/python-extension": "^1.0.6",
    "graphql": "^16.11.0",
    "infrahub-sdk": "^0.0.6",
    "yaml": "^2.8.0",
    "yaml-ast-parser": "^0.0.43"
  }
}